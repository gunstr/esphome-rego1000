esphome:
  name: esp-rego1000
  includes:
    - regoreader.h
  libraries:
    - "miwagner/ESP32CAN"

esp32:
  board: nodemcu-32s
  framework:
    type: arduino

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "esp-rego1000"
    password: !secret fallback_password

captive_portal:

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0 # disable logging over uart
  
# Enable Home Assistant API
api:
  password: !secret hass_api_password

ota:
  password: !secret ota_password

sensor:
  - platform: custom
    lambda: |-
      auto rego_sensor = new RegoReader();
      App.register_component(rego_sensor);
      return {
        rego_sensor->heat_carrier_1,
        rego_sensor->outdoor,
        rego_sensor->warm_water,
        rego_sensor->heat_carrier_2,
        rego_sensor->hot_gas,
        rego_sensor->heat_fluid_out,
        rego_sensor->heat_fluid_in,
        rego_sensor->cold_fluid_in,
        rego_sensor->cold_fluid_out
      };
    sensors:
    - name: "Heat Carrier 1"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Outdoor"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Warm water"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Heat carrier 2"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Hot gas"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Heat fluid out"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Heat fluid in"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Cold fluid in"
      unit_of_measurement: °C
      accuracy_decimals: 1
    - name: "Cold fluid out"
      unit_of_measurement: °C
      accuracy_decimals: 1
